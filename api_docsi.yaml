openapi: 3.0.3
info:
  title: TodoAPI Documentation
  description: |-
    Documentação do TodoAPI
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: user
    description: Operações sobre o usuário
  - name: todo
    description: Operações sobre as tarefas do usuário
paths:
  /user/signup:
    post:
      tags:
        - user
      summary: Registra um usuário
      operationId: userSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        201: 
          description: "User created!"
        400: 
          description: "Username already taken!"
  /user/login:
    post:
      tags:
        - user
      summary: Autentica um usuário
      operationId: userLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        200: 
          description: "Token"
        404: 
          description: "User not found!"
        409:
          description: "Wrong password!"
  /todo/get:
    get:
      tags:
        - todo
      summary: Pegar todas tarefas do usuário
      operationId: getTodo
      security: 
        - bearerAuth: []
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todos"
  /todo/create:
    post:
      tags:
        - todo
      summary: Criar uma nova tarefa pro usuário
      operationId: createTodo
      security: 
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTodo"
        required: true
      responses:
        201:
          description: "Todo Created"
  /todo/delete/{id}:
    delete:
      tags:
        - todo
      summary: Deletar uma tarefa de um usuário
      operationId: deleteTodo
      security: 
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: "Todo deleted! || Action not allowed! || Todo not found!"
  /todo/update/{id}:
    put:
      tags:
        - todo
      summary: Atualizar uma tarefa de um usuário
      operationId: updateTodo
      security: 
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTodo"
      responses:
        200:
          description: "Todo updated! || Action not allowed! || Todo not found!"
  /todo/complete/{id}:
    patch:
      tags:
        - todo
      summary: Completar o status de uma tarefa de um usuário
      operationId: completeTodo
      security: 
        - bearerAuth: []
      parameters: 
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: "Todo completed! || Action not allowed! || Todo not found!"
components:
  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: "Luis"
        password:
          type: string
          minLength: 8
          format: password
          example: 26092002
    CreateTodo:
      type: object
      properties:
        newTodo:
          type: string
          example: "Take trash out"
          maxLength: 50
    UpdateTodo:
      type: object
      properties:
        newTodo:
          type: string
          example: "Take trash out"
          maxLength: 50
        status:
          type: boolean
          example: false
    Todos:
      type: array
      items:
        properties:
          id: 
            type: integer
            example: 0
            minimum: 0
          todo:
            type: string
            example: "Take trash out"
            maxLength: 50
          todoUserId:
            type: integer
            example: 0
            minimum: 0
          todoCompleted:
            type: boolean
            example: false
  securitySchemes: 
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT